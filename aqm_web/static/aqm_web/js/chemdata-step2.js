// Generated by CoffeeScript 1.3.1
(function() {
  var Pollutant, add_pollutant, all_pollutant_code, all_pollutant_name, edit_pollutant, get_pollutant_data, get_pollutant_id, get_pollutant_name, remove_pollutant, remove_pollutants, reset_pollutant_list_modal, reset_pollutant_listbox, save_pollutant, set_pollutant_list_modal, update_pollutant_list_modal,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.aqm.chemdata = {};

  window.aqm.chemdata.pollutant_list = [];

  window.aqm.chemdata.pollutant_id_list = [];

  Pollutant = (function() {

    Pollutant.name = 'Pollutant';

    function Pollutant(config) {
      var default_param, param;
      default_param = {
        pollutant: '',
        worksheet: 0,
        conversion_factor: 1.0,
        row_start: 0,
        row_end: 0,
        data_w: 0,
        data_h: 0,
        value: 'A',
        lat: 'B',
        lon: 'C',
        x: 'D',
        y: 'E',
        hourly_fluctuation: '[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]'
      };
      param = $.extend(default_param, config);
      this.pollutant = param.pollutant.trim();
      this.worksheet = parseInt(param.worksheet);
      this.conversion_factor = parseFloat(param.conversion_factor);
      this.row_start = parseInt(param.row_start);
      this.row_end = parseInt(param.row_end);
      this.data_w = parseInt(param.data_w);
      this.data_h = parseInt(param.data_h);
      this.value = param.value.trim().toUpperCase();
      this.lat = param.lat.trim().toUpperCase();
      this.lon = param.lon.trim().toUpperCase();
      this.x = param.x.trim().toUpperCase();
      this.y = param.y.trim().toUpperCase();
      this.hourly_fluctuation = param.hourly_fluctuation.trim();
    }

    Pollutant.prototype.validate = function() {
      var hourly_factors;
      if (this.pollutant.length === 0) {
        return false;
      }
      if (isNaN(this.worksheet)) {
        return false;
      }
      if (isNaN(this.conversion_factor)) {
        return false;
      }
      if (isNaN(this.row_start)) {
        return false;
      }
      if (isNaN(this.row_end)) {
        return false;
      }
      if (isNaN(this.data_w)) {
        return false;
      }
      if (isNaN(this.data_h)) {
        return false;
      }
      if (this.value.length === 0) {
        return false;
      }
      if (this.lat.length === 0) {
        return false;
      }
      if (this.lon.length === 0) {
        return false;
      }
      if (this.x.length === 0) {
        return false;
      }
      if (this.y.length === 0) {
        return false;
      }
      try {
        hourly_factors = JSON.parse(this.hourly_fluctuation);
      } catch (SyntaxError) {

      }
      if (hourly_factors.length !== 24) {
        return false;
      }
      return true;
    };

    return Pollutant;

  })();

  all_pollutant_code = ['E_ALD', 'E_CO', 'E_CSL', 'E_ECI', 'E_ECJ', 'E_ETH', 'E_HC3', 'E_HC5', 'E_HC8', 'E_HCHO', 'E_ISO', 'E_KET', 'E_NH3', 'E_NO', 'E_NO3I', 'E_NO3J', 'E_OL2', 'E_OLI', 'E_OLT', 'E_ORA2', 'E_ORGI', 'E_ORGJ', 'E_PM25I', 'E_PM25J', 'E_PM_10', 'E_SO2', 'E_SO4I', 'E_SO4J', 'E_TOL', 'E_XYL'];

  all_pollutant_name = ['ALD', 'CO', 'CSL', 'ECI', 'ECJ', 'ETH', 'HC3', 'HC5', 'HC8', 'HCHO', 'ISO', 'KET', 'NH3', 'NO', 'NO3I', 'NO3J', 'OL2', 'OLI', 'OLT', 'ORA2', 'ORGI', 'ORGJ', 'PM25I', 'PM25J', 'PM_10', 'SO2', 'SO4I', 'SO4J', 'TOL', 'XYL'];

  window.process_chemdata = function(data) {
    var pollutant, _i, _j, _len, _len1, _ref, _ref1;
    window.aqm.chemdata.chemdata = data;
    window.aqm.chemdata.pollutant_list = [];
    _ref = data.parameters;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      pollutant = _ref[_i];
      window.aqm.chemdata.pollutant_list.push(pollutant);
    }
    window.aqm.chemdata.pollutant_id_list = [];
    _ref1 = data.parameters;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      pollutant = _ref1[_j];
      window.aqm.chemdata.pollutant_id_list.push(pollutant.pollutant);
    }
    update_pollutant_list_modal();
    return reset_pollutant_listbox();
  };

  remove_pollutants = function(pollutant_list) {
    var plt;
    return window.aqm.chemdata.pollutant_list = (function() {
      var _i, _len, _ref, _ref1, _results;
      _ref = window.aqm.chemdata.pollutant_list;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        plt = _ref[_i];
        if (_ref1 = plt.pollutant, __indexOf.call(pollutant_list, _ref1) < 0) {
          _results.push(plt);
        }
      }
      return _results;
    })();
  };

  get_pollutant_data = function(pollutant_id) {
    var index;
    index = window.aqm.chemdata.pollutant_id_list.indexOf(pollutant_id);
    return window.aqm.chemdata.pollutant_list[index];
  };

  get_pollutant_name = function(pollutant_id) {
    var index;
    index = all_pollutant_code.indexOf(pollutant_id);
    return all_pollutant_name[index];
  };

  get_pollutant_id = function(pollutant_name) {
    var index;
    index = all_pollutant_name.indexOf(pollutant_name);
    return all_pollutant_code[index];
  };

  remove_pollutant = function(pollutant) {
    var plt;
    window.aqm.chemdata.pollutant_list = (function() {
      var _i, _len, _ref, _results;
      _ref = window.aqm.chemdata.pollutant_list;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        plt = _ref[_i];
        if (plt.pollutant !== pollutant) {
          _results.push(plt);
        }
      }
      return _results;
    })();
    return window.aqm.chemdata.pollutant_id_list = (function() {
      var _i, _len, _ref, _results;
      _ref = window.aqm.chemdata.pollutant_list;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        plt = _ref[_i];
        _results.push(plt.pollutant);
      }
      return _results;
    })();
  };

  update_pollutant_list_modal = function() {
    var i, pollutant, pollutant_name, _i, _len, _results;
    $('#id-pollutant-list').empty();
    _results = [];
    for (i = _i = 0, _len = all_pollutant_code.length; _i < _len; i = ++_i) {
      pollutant = all_pollutant_code[i];
      if (__indexOf.call(window.aqm.chemdata.pollutant_id_list, pollutant) >= 0) {
        continue;
      }
      pollutant_name = all_pollutant_name[i];
      _results.push($('#id-pollutant-list').append("<option value=\"" + pollutant + "\">" + pollutant_name + "</option>"));
    }
    return _results;
  };

  reset_pollutant_list_modal = function() {
    var i, pollutant, pollutant_name, _i, _len, _results;
    $('#id-pollutant-list').empty();
    _results = [];
    for (i = _i = 0, _len = all_pollutant_code.length; _i < _len; i = ++_i) {
      pollutant = all_pollutant_code[i];
      pollutant_name = all_pollutant_name[i];
      _results.push($('#id-pollutant-list').append("<option value=\"" + pollutant + "\">" + pollutant_name + "</option>"));
    }
    return _results;
  };

  set_pollutant_list_modal = function(pollutant_id) {
    var pollutant_name;
    $('#id-pollutant-list').empty();
    pollutant_name = get_pollutant_name(pollutant_id);
    return $('#id-pollutant-list').append("<option value=\"" + pollutant_id + "\">" + pollutant_name + "</option>");
  };

  reset_pollutant_listbox = function() {
    var pollutant, pollutant_name, _i, _len, _ref, _results;
    $('#chemdata-param-list').empty();
    _ref = window.aqm.chemdata.pollutant_list;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      pollutant = _ref[_i];
      pollutant_name = get_pollutant_name(pollutant.pollutant);
      _results.push($('#chemdata-param-list').append("<option value=\"" + pollutant.pollutant + "\">" + pollutant_name + "</option>"));
    }
    return _results;
  };

  edit_pollutant = function(pollutant_id) {
    var pollutant;
    pollutant = get_pollutant_data(pollutant_id);
    set_pollutant_list_modal(pollutant_id);
    $('#id-pollutant-list').val(pollutant.pollutant);
    $('#id-worksheet-list').val(pollutant.worksheet);
    $('#id-conv-factor').val(pollutant.conversion_factor);
    $('#id-data-row-start').val(pollutant.row_start);
    $('#id-data-row-end').val(pollutant.row_end);
    $('#id-data-dim-w').val(pollutant.data_w);
    $('#id-data-dim-h').val(pollutant.data_h);
    $('#id-emission-col').val(pollutant.value);
    $('#id-lat-col').val(pollutant.lat);
    $('#id-lon-col').val(pollutant.lon);
    $('#id-x-col').val(pollutant.x);
    $('#id-y-col').val(pollutant.y);
    $('#id-hourly-fluctuation').val(pollutant.hourly_fluctuation);
    $('#area-modal').attr('data-command', 'edit');
    $('#area-modal').attr('data-command-param', pollutant.pollutant);
    return $('#area-modal').modal('show');
  };

  add_pollutant = function() {
    update_pollutant_list_modal();
    $('#id-pollutant-list').val("");
    $('#id-worksheet-list').val("");
    $('#id-conv-factor').val("");
    $('#id-data-row-start').val("");
    $('#id-data-row-end').val("");
    $('#id-data-dim-w').val("");
    $('#id-data-dim-h').val("");
    $('#id-emission-col').val("");
    $('#id-lat-col').val("");
    $('#id-lon-col').val("");
    $('#id-x-col').val("");
    $('#id-y-col').val("");
    $('#id-hourly-fluctuation').val("");
    $('#area-modal').attr('data-command', 'add');
    $('#area-modal').attr('data-command-param', '');
    return $('#area-modal').modal('show');
  };

  save_pollutant = function() {
    var command, original_data, param, plt, target_pollutant;
    command = $('#area-modal').attr('data-command');
    target_pollutant = $('#area-modal').attr('data-command-param');
    param = {
      pollutant: $('#id-pollutant-list').val(),
      worksheet: $('#id-worksheet-list').val(),
      conversion_factor: $('#id-conv-factor').val(),
      row_start: $('#id-data-row-start').val(),
      row_end: $('#id-data-row-end').val(),
      data_w: $('#id-data-dim-w').val(),
      data_h: $('#id-data-dim-h').val(),
      value: $('#id-emission-col').val(),
      lat: $('#id-lat-col').val(),
      lon: $('#id-lon-col').val(),
      x: $('#id-x-col').val(),
      y: $('#id-y-col').val(),
      hourly_fluctuation: $('#id-hourly-fluctuation').val()
    };
    plt = new Pollutant(param);
    switch (command) {
      case "add":
        if (plt.validate()) {
          window.aqm.chemdata.pollutant_list.push(plt);
          window.aqm.chemdata.pollutant_id_list.push(plt.pollutant);
          reset_pollutant_listbox();
          return true;
        } else {
          return false;
        }
        break;
      case "edit":
        original_data = get_pollutant_data(target_pollutant);
        if (plt.validate()) {
          original_data.worksheet = plt.worksheet;
          original_data.conversion_factor = plt.conversion_factor;
          original_data.row_start = plt.row_start;
          original_data.row_end = plt.row_end;
          original_data.data_w = plt.data_w;
          original_data.data_h = plt.data_h;
          original_data.value = plt.value;
          original_data.lat = plt.lat;
          original_data.lon = plt.lon;
          original_data.x = plt.x;
          original_data.y = plt.y;
          original_data.hourly_fluctuation = plt.hourly_fluctuation;
          reset_pollutant_listbox();
          return true;
        } else {
          return false;
        }
    }
  };

  $(document).ready(function() {
    var i, sheet, worksheets, _i, _len, _results;
    $('#chemdata-add-pollutant').bind('click', function(event) {
      return add_pollutant();
    });
    $('#chemdata-edit-pollutant').bind('click', function(event) {
      var edit_list;
      edit_list = $('#chemdata-param-list').val();
      if (edit_list !== null) {
        if (edit_list.length > 0) {
          return edit_pollutant(edit_list[0]);
        }
      }
    });
    $('#chemdata-remove-pollutant').bind('click', function(event) {
      var removal_list;
      removal_list = $('#chemdata-param-list').val();
      remove_pollutants(removal_list);
      return reset_pollutant_listbox();
    });
    $('#chemdata-modal-cancel').bind('click', function(event) {
      return $('#area-modal').modal('hide');
    });
    $('#chemdata-modal-ok').bind('click', function(event) {
      if (save_pollutant()) {
        return $('#area-modal').modal('hide');
      } else {
        return window.aqm.alert("Error", "Check your input!");
      }
    });
    $('#chemdata-save').bind('click', function(event) {
      var chemdata_id, parameters_json;
      $(event.target).button('loading');
      chemdata_id = window.aqm.chemdata.chemdata.id;
      parameters_json = JSON.stringify(window.aqm.chemdata.pollutant_list);
      return $.ajax({
        url: chemdata_url,
        dataType: 'json',
        type: 'POST',
        data: {
          chemdata_id: chemdata_id,
          parameters_json: parameters_json,
          display_message: true
        },
        success: function(data) {
          $(event.target).button('reset');
          if (data) {
            return window.location.replace(window.chemdata_list_url);
          }
        },
        error: function(jqXHR, textStatus, errorThrown) {
          $(event.target).button('reset');
          if (jqXHR.status === 0) {
            return window.aqm.alert("Connectivity Error", "Cannot connect to remote server: " + textStatus + " " + errorThrown);
          } else if (jqXHR.status === 400) {
            return window.aqm.alert("Error", "Invalid data received. Please check your input.");
          } else if (jqXHR.status === 404) {
            return window.aqm.alert("Error", "Resource Not Found");
          } else if (jqXHR.status === 500) {
            return window.aqm.alert("Error", "Internal Server Error");
          } else if (jqXHR.status === 503) {
            return window.aqm.alert("Error", "Server temporarily unavailable!");
          }
        }
      });
    });
    $('#chemdata-conversion-factor-evaluate').bind('click', function(event) {
      event.preventDefault();
      return $('#id-conv-factor').val(eval($('#id-conv-factor').val()));
    });
    $('#chemdata-default-hourly-fluctuation').bind('click', function(event) {
      event.preventDefault();
      return $('#id-hourly-fluctuation').val('[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]');
    });
    $('#area-modal').modal({
      backdrop: true,
      keyboard: true,
      show: false
    });
    worksheets = [];
    try {
      worksheets = $.parseJSON($('#chemdata-param-list').attr('data-worksheets'));
    } catch (_error) {}
    $('#id-worksheet-list').html('');
    _results = [];
    for (i = _i = 0, _len = worksheets.length; _i < _len; i = ++_i) {
      sheet = worksheets[i];
      _results.push($('#id-worksheet-list').append("<option value=\"" + i + "\">" + sheet + "</option>"));
    }
    return _results;
  });

}).call(this);
